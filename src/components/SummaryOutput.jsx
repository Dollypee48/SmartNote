export default function SummaryOutput({ summary, source, error }) {
  const getSourceInfo = () => {
    const sources = {
      sharpapi: {
        name: "SharpAPI Summary",
        description: "Generated by ApyHub's SharpAPI summarizer",
        colorBg: "bg-green-50",
        colorText: "text-green-800",
        badgeBg: "bg-green-200",
        badgeText: "text-green-900",
      },
      fallback: {
        name: "Fallback Summary",
        description: "Simple text preview used as fallback",
        colorBg: "bg-yellow-50",
        colorText: "text-yellow-800",
        badgeBg: "bg-yellow-200",
        badgeText: "text-yellow-900",
      },
      failed: {
        name: "Failed",
        description: "Could not generate summary",
        colorBg: "bg-red-50",
        colorText: "text-red-800",
        badgeBg: "bg-red-200",
        badgeText: "text-red-900",
      },
    };

    return sources[source] || {
      name: "Summary",
      description: "",
      colorBg: "bg-gray-50",
      colorText: "text-gray-800",
      badgeBg: "bg-gray-200",
      badgeText: "text-gray-900",
    };
  };

  const sourceInfo = getSourceInfo();

  return (
    <section
      className={`mt-6 max-w-3xl mx-auto rounded-lg shadow-md overflow-hidden border ${sourceInfo.colorBg} border-transparent`}
      aria-label="Summary Output"
    >
      <header
        className={`flex justify-between items-center px-6 py-3 border-b ${sourceInfo.colorBg}`}
      >
        <div>
          <h3
            className={`text-lg font-semibold tracking-wide ${sourceInfo.colorText}`}
          >
            {sourceInfo.name}
          </h3>
          {sourceInfo.description && (
            <p className="text-xs opacity-70 mt-0.5">{sourceInfo.description}</p>
          )}
        </div>

        {error && (
          <span
            className={`inline-block px-3 py-1 text-xs font-semibold rounded-full shadow-sm select-none ${sourceInfo.badgeBg} ${sourceInfo.badgeText} whitespace-nowrap`}
            title="Error details"
          >
            ⚠️ {error}
          </span>
        )}
      </header>

      <article className="p-6 bg-white leading-relaxed text-gray-900 whitespace-pre-wrap text-base">
        {summary || "No summary could be generated."}
      </article>
    </section>
  );
}
